name: cloudstate
version: "0.4.0"
author: Adriano Santos <sleipnir@bsd.com.br>
about: CloudState CLI
args:
  - check:
      long: check
      help: Test dependencies
  - upgrade:
      long: upgrade
      help: Update CloudState CLI version
  - list-profiles:
      short: l
      long: list-profiles
      help: List all profiles supported
subcommands:
  - completions:
      about: Generates completion scripts for your shell
      settings:
        - hidden: true
      args:
        - shell:
            possible_values:
              - bash
              - zsh
              - fish
            help: The shell to generate the script for
            takes_value: true
  - init:
      about: Initialize a CloudState k8s namespace/operator
  - destroy:
      about: Destroy CloudState namespace and others resources
  - create:
      about: Create a new user function project from template. Example. cloudstate create --name=shopping-cart --profile=java --registry=docker.io --tag=1.0.1
      args:
        - name:
            short: N
            long: name
            takes_value: true
            help: Set the name of project
        - profile:
            short: P
            long: profile
            takes_value: true
            possible_values:
              - java
              - node
              - go
              - csharp
              - rust
              - python
              - scala
            help: Set language template for this project. Possible values is [java, node, go, csharp, rust, python, scala]
        - pattern:
            long: pattern
            takes_value: true
            possible_values:
              # Event Sourced
              - EVS
              # CRDT
              - CRDT
              # KVS
              - KVS
              # CQRS
              - CQRS
              # P2P
              - P2P
            help: Set the template pattern for beginning. Default is Event Sourced in Shopping Cart Example. Possible values is [EVS, CRDT, KVS, CQRS, P2P]
        - tag:
            short: t
            long: tag
            takes_value: true
            help: Used in conjunction with 'create' and/or 'build'. Set version of user function. Used to create container images. Example. -t 1.0.1 or --tag=0.1.0
        - registry:
            short: r
            long: registry
            takes_value: true
            help: Set the docker repository. Used to create container images. Example. -r quay.io/myuser or --registry=docker.io/sleipnir
        - set-user:
            long: set-user
            takes_value: true
            help: Used in conjunction with 'repo'. Set the username for the target docker registry
        - set-pass:
            long: set-pass
            takes_value: true
            help: Used in conjunction with 'repo'. Set the password for the target docker registry
        - set-editor:
            short: E
            long: set-editor
            takes_value: true
            possible_values:
              - vi
              - nano
              - code
              - idea
            help: Used in conjunction with 'create'. Set the default code editor. Default 'vi'.
        - datastore:
            short: d
            long: datastore
            takes_value: true
            possible_values:
              - InMemory
              - Cassandra
              - Postgres
            help: Used in conjunction with 'create'. Enable CloudState Stateful stores. Example. --datastore=Cassandra. Valid values [Cassandra, Postgres or InMemory]
  - build:
      about: Build project with template specified. Requires path. Example. cloudstate build --path=.
      args:
        - tag:
            short: t
            long: tag
            takes_value: true
            help: Used in conjunction with 'create' and/or 'build'. Set version of user function. Used to create container images. Example. -t 1.0.1 or --tag=0.1.0
        - path:
            long: path
            takes_value: true
            help: Set the path of build
        - push:
            long: push
            help: Push container image in repository
        - datastore:
            short: d
            long: datastore
            takes_value: true
            possible_values:
              - InMemory
              - Cassandra
              - Postgres
            help: Used in conjunction with 'create'. Enable CloudState Stateful stores. Example. --datastore=Cassandra. Valid values [Cassandra, Postgres or InMemory]
  - deploy:
      about: Deploy user function with CloudState sidecar in K8s environment
      args:
        - namespace:
            short: n
            long: namespace
            help: Set k8s namespace for user function. Example. cloudstate deploy -n <namespace>
  - run:
      about: Running user function & cloudstate proxy in Docker
  - scale:
      about: Scale a user function
      args:
        - name:
            short: N
            long: name
            help: Name of application user function
        - replicas:
            short: r
            long: replicas
            help: Set number of replicas for scaling
  - provision:
      about: Shortcut to build, push and deploy. Example. cloudstate provision -p . -t 1.0.1 -n production
  - logs:
      about: Show application logs
      args:
        - name:
            short: N
            long: name
            help: Name of application
            takes_value: true
        - namespace:
            short: n
            long: namespace
            help: Set k8s namespace for user function.
            takes_value: true
        - tail:
            short: T
            long: tail
            help: Tail logs
        - all:
            long: all
            help: Show user-container and sidecar logs
        - since:
            long: since
            help: Filter
            takes_value: true
